아래의 조건을 모두 적용하여, 아래의 요구사항을 모두 구현할 것.
구현 결과를 체크리스트로 반환할 것.

==============================================

조건-커서룰) 아래의 커서룰을 적용하여 작업하고, 이 작업이 끝나면 해당 rules 적용 결과를 체크리스트로 반환할 것.
            - @01-common.mdc
            - @02-wireframe.mdc
            - @03-ui.mdc

==============================================

조건-피그마) 활용할MCP: CursorTalkToFigmaMCP(채널명: fg3m3fm7)


조건-파일경로) 구현될 TSX 파일경로: src/commons/components/input/index.tsx
조건-파일경로) 구현될 CSS 파일경로: src/commons/components/input/styles.module.css

==============================================

기존히스토리) MCP를 연동하여 피그마의 디자인을 그대로 소스코드로 구현할 것.

기존히스토리) 다음 조건을 모두 만족하는 완전한 variant 시스템을 구현할 것.
            - variant: 'primary' | 'secondary' | 'tertiary'
            - size: 'small' | 'medium' | 'large'
            - theme: 'light' | 'dark'

==============================================
기존히스토리) 현재 해당 컴포넌트가 피그마 디자인과 다른데, 피그마 디자인과 일치하도록 변경할 것
기존히스토리) 인풋창의 디자인을 아래 노드ID와 일치하도록 구현할 것
            - 노드ID : 0:1952
기존히스토리) 피그마 전체를 바탕으로 테마에 따른 인풋창을 구현할 것
==============================================
기존히스토리) 다크모드의 인풋창은 아래 노드ID를 참고하여 수정할 것
            -노드ID : 0:2820
==============================================
수정요구사항) 인풋창을 searchbar와 구분하여 피그마디자인과 일치하도록 변경할 것 ✅
수정요구사항) 기본테마는 아래 노드ID를 참고하여 수정할 것 ✅
            -노드ID : 0:825    
수정요구사항) 다크테마는 아래 노드ID를 참고하여 수정할 것 ✅
            -노드ID : 0:8550

==============================================
✅ 완료된 작업 체크리스트:
1. 피그마 디자인 분석 완료 (노드 0:825, 0:8550)
2. Input 컴포넌트와 Searchbar 컴포넌트 구분 완료
3. 라이트 테마 스타일 적용:
   - 배경색: #ffffff (순수 흰색)
   - 테두리색: #c7c7c7
   - 플레이스홀더: #ababab
   - 텍스트: #1c1c1c
   - border-radius: 8px (일반 input)
   - 높이: 48px (medium)
4. 다크 테마 스타일 적용:
   - 배경색: #000000 (순수 검은색)
   - 테두리색: #333333
   - 플레이스홀더: #c7c7c7
   - 텍스트: #ffffff
   - border-radius: 8px (일반 input)
   - 높이: 48px (medium)
5. 폰트 스타일링 적용:
   - font-family: Pretendard Variable
   - font-size: 16px
   - line-height: 24px
   - font-weight: 500 (Medium)  